# import Query.event from "generated/prisma.graphql"
# import Query.day from "generated/prisma.graphql"
# import Query.event from "generated/prisma.graphql"
# import Query.vacation from "generated/prisma.graphql"

# import Mutation.createDay from "generated/prisma.graphql"
# import Mutation.updateDay from "generated/prisma.graphql"
# import Mutation.updateManyDays from "generated/prisma.graphql"
# import Mutation.deleteDay from "generated/prisma.graphql"

# import Mutation.createEvent from "generated/prisma.graphql"
# import Mutation.updateEvent from "generated/prisma.graphql"
# import Mutation.deleteEvent from "generated/prisma.graphql"


# import Mutation.deleteUser from "generated/prisma.graphql"

# import Mutation.createVacation from "generated/prisma.graphql"
# import Mutation.updateVacation from "generated/prisma.graphql"
# import Mutation.deleteVacation from "generated/prisma.graphql"

# import User, Vacation, Day, Events, from "generated/prisma.graphql"


type LoginResponse {
	token: String
	user: User
}
type UserFoundError {
  message: String!
}

union UserRegResult = User | UserFoundError


type Mutation {
	signUp(username: String!, email: String, password: String!): UserRegResult!
	login(username: String!, password: String!): LoginResponse!
	userUpdate(id: ID!, username: String, email: String, password: String ): User!
	
}
type Query {
  currentUser: User!
  vacations: [Vacation!]!
  authenticationError: String
}

